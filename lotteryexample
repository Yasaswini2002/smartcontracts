// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;

contract Lottery {
    address payable[] public players;
    address public manager;
    uint256 public minimumAmount = 0.1 ether;
    uint256 public round = 1;

    constructor() {
        manager = msg.sender;
    }

    function enter() public payable {
        require(msg.value == minimumAmount, "Amount is less than minimum");
        players.push(payable(msg.sender));
    }

    function random() private view returns (uint256) {
        return uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, players.length)));
    }

    function pickWinner() public restricted {
        require(players.length >= 3, "Not enough players to pick a winner");
        uint256 index = random() % players.length;
        players[index].transfer(address(this).balance);
        delete players;
        round++;
    }

    modifier restricted() {
        require(msg.sender == manager, "Only the manager can call this function");
        _;
    }
}
